[tool:pytest]
# Security Testing Configuration for Flask CSV Upload Endpoint
# Based on 2025 security testing best practices

# Test discovery
testpaths = tests/security
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for organizing security tests
markers =
    csv_injection: CSV injection attack tests
    file_upload: File upload security tests
    executable_masquerading: Executable file masquerading tests
    performance_security: Performance-related security tests
    edge_cases: Edge case security scenarios
    integration: Security integration tests
    slow: Tests that take longer than 5 seconds
    critical: Critical security tests that must pass
    
# Output and reporting
addopts = 
    -v
    --strict-markers
    --tb=short
    --maxfail=5
    --durations=10
    --color=yes
    --capture=no
    --show-capture=all

# Timeout settings for security tests
timeout = 300
timeout_method = thread

# Coverage settings for security testing
# (Uncomment if coverage.py is installed)
# --cov=app
# --cov-report=html:htmlcov/security
# --cov-report=term-missing
# --cov-fail-under=80

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:werkzeug.*
    
# Minimum version requirements
minversion = 6.0

# Test environment configuration
env =
    FLASK_ENV = testing
    TESTING = true
    WTF_CSRF_ENABLED = false